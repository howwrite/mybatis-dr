<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.howwrite.mapper.DynamicSqlMapper">
    <sql id="dynamicSelectClause">
        ${params.condition.calSelectKeys()}
    </sql>

    <sql id="queryCondition">
        <where>
            <if test="params.condition != null and params.condition.conditions != null and params.condition.conditions.size() > 0">
                <foreach collection="params.condition.conditions" item="condition" separator=" AND ">
                    <choose>
                        <when test="condition.operator == 'IN' or condition.operator == 'NOT IN'">
                            `${condition.field}` ${condition.operator}
                            <foreach collection="condition.value" item="val" open="(" separator="," close=")">
                                #{val}
                            </foreach>
                        </when>
                        <when test="condition.operator == 'IS NULL' or condition.operator == 'IS NOT NULL'">
                            `${condition.field}` ${condition.operator}
                        </when>
                        <otherwise>
                            `${condition.field}` ${condition.operator} #{condition.value}
                        </otherwise>
                    </choose>
                </foreach>
            </if>
            <if test="params.logicDelete != null and params.logicDelete">
                and `deleted` = 0
            </if>
        </where>

        <if test="params.condition != null and params.condition.orders != null and params.condition.orders.size() > 0">
            <foreach collection="params.condition.orders" item="order" separator="," open="order by">
                `${order.field}` ${order.orderMode}
            </foreach>
        </if>
    </sql>
    <sql id="limitAndOffset">
        <if test="params.condition.limit != null">
            limit #{params.condition.limit}
        </if>
        <if test="params.condition.offset != null">
            offset #{params.condition.offset}
        </if>
    </sql>

    <!-- 插入记录 -->
    <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="auto_gen_id">
        INSERT INTO `${params.tableName}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="params.entity" index="key" item="value">
                `${key}`,
            </foreach>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <foreach collection="params.entity" index="key" item="value">
                #{value},
            </foreach>
        </trim>
    </insert>

    <!-- 插入记录 -->
    <insert id="insertOrUpdate" parameterType="map" useGeneratedKeys="true" keyProperty="auto_gen_id">
        INSERT INTO `${params.tableName}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="params.entity" index="key" item="value">
                `${key}`,
            </foreach>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <foreach collection="params.entity" index="key" item="value">
                #{value},
            </foreach>
        </trim>
        <if test="params.whenDuplicateUpdateFields != null and params.whenDuplicateUpdateFields.size() > 0">
            ON DUPLICATE KEY UPDATE
            <foreach collection="params.whenDuplicateUpdateFields" index="key" item="item" separator=",">
                `${item}` = values(`${item}`)
            </foreach>
        </if>
    </insert>

    <!-- 批量插入记录 -->
    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="entities.auto_gen_id">
        INSERT INTO `${params.tableName}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="entities[0]" index="key" item="value">
                `${key}`,
            </foreach>
        </trim>
        VALUES
        <foreach collection="entities" item="entity" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <foreach collection="entity" index="key" item="value">
                    #{value},
                </foreach>
            </trim>
        </foreach>
    </insert>
    <!-- 批量插入记录 -->
    <insert id="batchInsertOrUpdate">
        INSERT INTO `${params.tableName}`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="entities[0]" index="key" item="value">
                `${key}`,
            </foreach>
        </trim>
        VALUES
        <foreach collection="entities" item="entity" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <foreach collection="entity" index="key" item="value">
                    #{value},
                </foreach>
            </trim>
        </foreach>
        <if test="params.whenDuplicateUpdateFields != null and params.whenDuplicateUpdateFields.size() > 0">
            ON DUPLICATE KEY UPDATE
            <foreach collection="params.whenDuplicateUpdateFields" index="key" item="item" separator=",">
                `${item}` = values(`${item}`)
            </foreach>
        </if>
    </insert>

    <!-- 更新记录 -->
    <update id="update" parameterType="map">
        UPDATE `${params.tableName}`
        <set>
            <foreach collection="params.entity" index="key" item="value" separator=",">
                <if test="key != params.primaryKey">
                    `${key}` = #{value}
                </if>
            </foreach>
        </set>
        <include refid="queryCondition"/>
        <include refid="limitAndOffset"/>
    </update>

    <!-- 根据条件删除记录 -->
    <delete id="delete" parameterType="map">
        DELETE FROM `${params.tableName}`
        <include refid="queryCondition"/>
        <include refid="limitAndOffset"/>
    </delete>

    <!-- 逻辑删除 -->
    <update id="logicDelete" parameterType="map">
        UPDATE `${params.tableName}`
        <set>
            `deleted` = id,
            `deleted_time` = now()
        </set>
        <include refid="queryCondition"/>
        <include refid="limitAndOffset"/>
    </update>


    <!-- 根据条件查询记录 -->
    <select id="findByCondition" parameterType="map" resultType="map">
        SELECT
        <include refid="dynamicSelectClause"/>
        FROM `${params.tableName}`
        <include refid="queryCondition"/>
        <include refid="limitAndOffset"/>
    </select>


    <!-- 根据条件查询记录数 -->
    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(
        <include refid="dynamicSelectClause"/>
        ) FROM `${params.tableName}`
        <include refid="queryCondition"/>
    </select>
</mapper> 